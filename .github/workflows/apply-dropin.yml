name: Apply Drop-in ZIP

on:
  push:
    branches: [ "staging" ]
    paths:
      - "SabaiFly-dropin-*.zip"
      - "**/SabaiFly-dropin-*.zip"

permissions:
  contents: write

jobs:
  apply-dropin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Ensure unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Locate drop-in ZIP
        id: findzip
        shell: bash
        run: |
          set -euo pipefail
          # pick newest matching ZIP
          ZIP=$(ls -1t **/SabaiFly-dropin-*.zip SabaiFly-dropin-*.zip 2>/dev/null | head -n 1 || true)
          if [ -z "$ZIP" ]; then
            echo "No drop-in ZIP found." >&2
            exit 1
          fi
          echo "zip_path=$ZIP" >> "$GITHUB_OUTPUT"
          echo "Found $ZIP"

      - name: Apply drop-in
        shell: bash
        run: |
          set -euo pipefail
          ZIP="${{ steps.findzip.outputs.zip_path }}"
          echo "Unzipping $ZIP to repo rootâ€¦"
          unzip -o "$ZIP" -d .
          git rm -f "$ZIP" || true
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(dropin): apply $(basename "$ZIP")"
          git push
